12.	Write a program to compute the finish time, turnaround time and waiting time for the
 Round robin 
import java.util.Scanner;
public class RoundRobinSimple {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of processes: ");
        int numProcesses = scanner.nextInt();
        int[] burstTime = new int[numProcesses];
        int[] waitingTime = new int[numProcesses];
        int[] turnaroundTime = new int[numProcesses];
        int[] remainingTime = new int[numProcesses];
        for (int i = 0; i < numProcesses; i++) {
            System.out.print("Enter burst time for process " + (i + 1) + ": ");
            burstTime[i] = scanner.nextInt();
            remainingTime[i] = burstTime[i];
        }
        System.out.print("Enter the time quantum: ");
        int quantum = scanner.nextInt();
        int time = 0;
        while (true) {
            boolean done = true;
            for (int i = 0; i < numProcesses; i++) {
                if (remainingTime[i] > 0) {  
                    done = false;
                    if (remainingTime[i] > quantum) {
                        time += quantum;
                        remainingTime[i] -= quantum;
                    } else {
                        time += remainingTime[i];
                        waitingTime[i] = time - burstTime[i];
                        remainingTime[i] = 0;
                    }
                }
            }
            if (done) break; 
        }
        System.out.println("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time");
        for (int i = 0; i < numProcesses; i++) {
            turnaroundTime[i] = burstTime[i] + waitingTime[i];
            System.out.println("P" + (i + 1) + "\t\t" + burstTime[i] + "\t\t" + waitingTime[i] + "\t\t" + turnaroundTime[i]);
        }

        scanner.close();
    }
}
